package core.problems;

import core.utils.IntegerProblem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem_2 extends IntegerProblem
{
    private int getActual(int max, int sum, int term1, int term2)
    {
        int current = term1 + term2;

        if (current > max)
        {
            return sum;
        }
        else if (current % 2 == 0)
        {
            sum += current;
        }

        return getActual(max, sum, term2, current);
    }

    protected int getActual()
    {
        return getActual(4000000, 0, 0, 1);
    }

    protected int getExpected()
    {
        return 4613732;
    }
}
